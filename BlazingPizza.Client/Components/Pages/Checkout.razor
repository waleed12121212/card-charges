@page "/checkout"
@using Microsoft.AspNetCore.Components
@rendermode InteractiveWebAssembly
@inject OrderState OrderState
@inject IJSRuntime JSRuntime
@inject IOrderRepository OrderRepository
@inject INotificationRepository NotificationRepository
@inject NavigationManager NavigationManager

<PageTitle>شحن ألعاب - الدفع</PageTitle>

<div class="main">
    <EditForm EditContext="EditContext" OnValidSubmit="PlaceOrder">
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>مراجعة الطلب</h4>
                <OrderReview Order="OrderState.Order" />
            </div>
        </div>
        <button class="checkout-button btn btn-warning" type="submit">
            تأكيد الطلب
        </button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
</div>

@code {
    public EditContext EditContext { get; set; } = new EditContext(new Order());

    protected override void OnInitialized( )
    {
        _ = RequestNotificationSubscriptionAsync();
    }

    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            await OrderState.GetStateFromLocalStorage(JSRuntime);
            EditContext = new EditContext(OrderState.Order);
            EditContext.SetFieldCssClassProvider(new BootstrapFieldClassProvider());
            StateHasChanged();
        }
    }

    async Task PlaceOrder( )
    {
        var newOrderId = await OrderRepository.PlaceOrder(OrderState.Order);
        if (newOrderId == -1)
        {
            await JSRuntime.InvokeVoidAsync("alert", "حدث خطأ أثناء إنشاء الطلب. حاول مرة أخرى.");
            return;
        }
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }

    async Task RequestNotificationSubscriptionAsync( )
    {

    }
}