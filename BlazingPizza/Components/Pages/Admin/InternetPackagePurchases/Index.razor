@page "/admin/internetpackagepurchases/index"
@using BlazingPizza.Shared
@using BlazingPizza.Shared.Interfaces
@using Microsoft.AspNetCore.Authorization
@inject IInternetPackagePurchaseRepository InternetPackagePurchaseRepository
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "Admin")]
@layout BlazingPizza.Components.Layout.AdminLayout
@rendermode InteractiveServer

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">مشتريات حزم الإنترنت</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li class="breadcrumb-item"><a href="/admin/dashboard">الرئيسية</a></li>
                    <li class="breadcrumb-item active">مشتريات حزم الإنترنت</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">قائمة مشتريات حزم الإنترنت</h3>
            </div>
            <div class="card-body">
                @if (purchases == null)
                {
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">جاري التحميل...</span>
                        </div>
                    </div>
                }
                else if (!purchases.Any())
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i> لا توجد مشتريات حزم إنترنت مسجلة.
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>الرقم</th>
                                    <th>اسم الحزمة</th>
                                    <th>الشركة</th>
                                    <th>رقم الهاتف</th>
                                    <th>المبلغ</th>
                                    <th>تاريخ الشراء</th>
                                    <th>تاريخ الانتهاء</th>
                                    <th>الحالة</th>
                                    <th>الإجراءات</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var purchase in purchases)
                                {
                                    <tr>
                                        <td>@purchase.Id</td>
                                        <td>@purchase.InternetPackage?.Name</td>
                                        <td>@purchase.CarrierDisplayName</td>
                                        <td>@purchase.PhoneNumber</td>
                                        <td>@purchase.Amount.ToString("C")</td>
                                        <td>@purchase.PurchaseDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@purchase.ExpiryDate.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            @switch (purchase.Status)
                                            {
                                                case InternetPackagePurchaseStatus.Pending:
                                                    <span class="badge badge-warning">في الانتظار</span>
                                                    break;
                                                case InternetPackagePurchaseStatus.Completed:
                                                    <span class="badge badge-success">مكتمل</span>
                                                    break;
                                                case InternetPackagePurchaseStatus.Failed:
                                                    <span class="badge badge-danger">فاشل</span>
                                                    break;
                                                case InternetPackagePurchaseStatus.Cancelled:
                                                    <span class="badge badge-secondary">ملغي</span>
                                                    break;
                                                case InternetPackagePurchaseStatus.Expired:
                                                    <span class="badge badge-dark">منتهي</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-info" @onclick="() => ViewDetails(purchase.Id)">
                                                <i class="fas fa-eye"></i> عرض
                                            </button>
                                            @if (purchase.Status == InternetPackagePurchaseStatus.Pending)
                                            {
                                                <button class="btn btn-sm btn-success" @onclick="() => MarkAsCompleted(purchase.Id)">
                                                    <i class="fas fa-check"></i> تأكيد
                                                </button>
                                                <button class="btn btn-sm btn-danger" @onclick="() => MarkAsFailed(purchase.Id)">
                                                    <i class="fas fa-times"></i> فشل
                                                </button>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Purchase Statistics -->
                    <div class="row mt-4">
                        <div class="col-md-3">
                            <div class="info-box">
                                <span class="info-box-icon bg-info"><i class="fas fa-shopping-cart"></i></span>
                                <div class="info-box-content">
                                    <span class="info-box-text">إجمالي المشتريات</span>
                                    <span class="info-box-number">@purchases.Count</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="info-box">
                                <span class="info-box-icon bg-success"><i class="fas fa-check"></i></span>
                                <div class="info-box-content">
                                    <span class="info-box-text">مكتملة</span>
                                    <span class="info-box-number">@purchases.Count(p => p.Status == InternetPackagePurchaseStatus.Completed)</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="info-box">
                                <span class="info-box-icon bg-warning"><i class="fas fa-clock"></i></span>
                                <div class="info-box-content">
                                    <span class="info-box-text">في الانتظار</span>
                                    <span class="info-box-number">@purchases.Count(p => p.Status == InternetPackagePurchaseStatus.Pending)</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="info-box">
                                <span class="info-box-icon bg-primary"><i class="fas fa-dollar-sign"></i></span>
                                <div class="info-box-content">
                                    <span class="info-box-text">إجمالي المبيعات</span>
                                    <span class="info-box-number">@purchases.Where(p => p.Status == InternetPackagePurchaseStatus.Completed).Sum(p => p.Amount).ToString("C")</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<InternetPackagePurchase>? purchases;

    protected override async Task OnInitializedAsync()
    {
        await LoadPurchases();
    }

    private async Task LoadPurchases()
    {
        purchases = await InternetPackagePurchaseRepository.GetAllAsync();
    }

    private async Task ViewDetails(int id)
    {
        Navigation.NavigateTo($"/admin/internetpackagepurchases/details/{id}");
    }

    private async Task MarkAsCompleted(int id)
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "هل أنت متأكد من تأكيد هذه المشترية؟"))
            return;

        var purchase = await InternetPackagePurchaseRepository.GetByIdAsync(id);
        if (purchase != null)
        {
            purchase.Status = InternetPackagePurchaseStatus.Completed;
            await InternetPackagePurchaseRepository.UpdateAsync(purchase);
            await LoadPurchases();
            StateHasChanged();
        }
    }

    private async Task MarkAsFailed(int id)
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "هل أنت متأكد من تسجيل هذه المشترية كفاشلة؟"))
            return;

        var purchase = await InternetPackagePurchaseRepository.GetByIdAsync(id);
        if (purchase != null)
        {
            purchase.Status = InternetPackagePurchaseStatus.Failed;
            await InternetPackagePurchaseRepository.UpdateAsync(purchase);
            await LoadPurchases();
            StateHasChanged();
        }
    }
} 