@namespace BlazingPizza.Components.Pages.Admin.Carrier
@page "/admin/carrier/create"
@using BlazingPizza.Shared
@using BlazingPizza
@using Microsoft.AspNetCore.Components.Forms
@using BlazingPizza.Shared.Interfaces
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject IImageService ImageService
@layout BlazingPizza.Components.Layout.AdminLayout
@rendermode InteractiveServer

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">اضافة شركة جديدة</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li class="breadcrumb-item"><a href="/admin/dashboard">الرئيسية</a></li>
                    <li class="breadcrumb-item"><a href="/admin/carrier/index">الشركات</a></li>
                    <li class="breadcrumb-item active">اضافة شركة جديدة</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <EditForm Model="carrier" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="carrierName">اسم الشركة *</label>
                        <input type="text" id="carrierName" class="form-control" @bind-value="carrier.carrierName" @bind-value:event="oninput" />
                        @if (showValidationError && string.IsNullOrWhiteSpace(carrier.carrierName))
                        {
                            <small class="text-danger">اسم الشركة مطلوب</small>
                        }
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="internetSubscribEmail">البريد الإلكتروني</label>
                        <input type="email" id="internetSubscribEmail" class="form-control" @bind-value="carrier.internetSubscribEmail" @bind-value:event="oninput" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="wholeSalePercent">نسبة البيع بالجملة (%)</label>
                        <input type="number" id="wholeSalePercent" class="form-control" @bind-value="carrier.wholeSalePercent" @bind-value:event="oninput" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="InvoiceCategory">فئة الفاتورة</label>
                        <input type="number" id="InvoiceCategory" class="form-control" @bind-value="carrier.InvoiceCategory" @bind-value:event="oninput" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="ImeiUserName">اسم مستخدم IMEI</label>
                        <input type="text" id="ImeiUserName" class="form-control" @bind-value="carrier.ImeiUserName" @bind-value:event="oninput" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="ImeiAPIKey">مفتاح API لـ IMEI</label>
                        <input type="text" id="ImeiAPIKey" class="form-control" @bind-value="carrier.ImeiAPIKey" @bind-value:event="oninput" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="ImeiAPIURL">رابط API لـ IMEI</label>
                        <input type="text" id="ImeiAPIURL" class="form-control" @bind-value="carrier.ImeiAPIURL" @bind-value:event="oninput" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="APIPassword">كلمة مرور API</label>
                        <input type="text" id="APIPassword" class="form-control" @bind-value="carrier.APIPassword" @bind-value:event="oninput" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="imageFile">صورة الشركة</label>
                        <InputFile id="imageFile" class="form-control" OnChange="OnImageFileChanged" accept=".jpg,.jpeg,.png,.gif" />
                        <small class="form-text text-muted">يُسمح بالصور بصيغ: JPG, JPEG, PNG, GIF</small>
                        @if (!string.IsNullOrEmpty(uploadedFileName))
                        {
                            <div class="mt-2">
                                <small class="text-success">تم اختيار: @uploadedFileName</small>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(imageUploadError))
                        {
                            <div class="mt-2">
                                <small class="text-danger">@imageUploadError</small>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" id="isActive" class="custom-control-input" @bind="carrier.isActive" />
                            <label class="custom-control-label" for="isActive">نشط</label>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" id="UnderMaintenance" class="custom-control-input" @bind="carrier.UnderMaintenance" />
                            <label class="custom-control-label" for="UnderMaintenance">تحت الصيانة</label>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" id="AdsSendSMS" class="custom-control-input" @bind="carrier.AdsSendSMS" />
                            <label class="custom-control-label" for="AdsSendSMS">إرسال إعلانات عبر SMS</label>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" id="AdsSendWP" class="custom-control-input" @bind="carrier.AdsSendWP" />
                            <label class="custom-control-label" for="AdsSendWP">إرسال إعلانات عبر WhatsApp</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer">
                <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                    @if (isSubmitting)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span>جاري الحفظ...</span>
                    }
                    else
                    {
                        <span>حفظ الشركة</span>
                    }
                </button>
                <a href="/admin/carrier/index" class="btn btn-secondary">إلغاء</a>
            </div>
        </EditForm>


        @code {
            private BlazingPizza.Shared.Carrier carrier = new();
            private bool isSubmitting = false;
            private bool underMaintenanceValue = false;
            private IBrowserFile? selectedImageFile;
            private string uploadedFileName = string.Empty;
            private string imageUploadError = string.Empty;
            private bool showValidationError = false;

            protected override void OnInitialized( )
            {
                carrier.UnderMaintenance = false;
            }

            protected override void OnParametersSet( )
            {
                underMaintenanceValue = carrier.UnderMaintenance ?? false;
            }

            private void OnImageFileChanged(InputFileChangeEventArgs e)
            {
                selectedImageFile = e.File;
                uploadedFileName = e.File?.Name ?? string.Empty;
                imageUploadError = string.Empty;
                StateHasChanged();
            }

            private async Task HandleValidSubmit( )
            {
                Console.WriteLine("HandleValidSubmit called");
                await JSRuntime.InvokeVoidAsync("console.log" , "HandleValidSubmit called");
                await JSRuntime.InvokeVoidAsync("alert" , "تم الضغط على الزر!");

                showValidationError = true;
                StateHasChanged();

                if (string.IsNullOrWhiteSpace(carrier.carrierName))
                {
                    await JSRuntime.InvokeVoidAsync("alert" , "اسم الشركة مطلوب");
                    return;
                }

                carrier.UnderMaintenance = underMaintenanceValue;

                isSubmitting = true;
                StateHasChanged();

                try
                {
                    Console.WriteLine($"Submitting carrier: {carrier.carrierName}");
                    await JSRuntime.InvokeVoidAsync("console.log" , $"Submitting carrier: {carrier.carrierName}");

                    // Upload image if selected
                    if (selectedImageFile != null)
                    {
                        try
                        {
                            var imageFileName = await ImageService.UploadImageAsync(selectedImageFile, "carrier");
                            carrier.imageName = imageFileName;
                            Console.WriteLine($"Image uploaded successfully: {imageFileName}");
                        }
                        catch (Exception ex)
                        {
                            imageUploadError = ex.Message;
                            await JSRuntime.InvokeVoidAsync("alert", $"خطأ في رفع الصورة: {ex.Message}");
                            return;
                        }
                    }

                    var response = await Http.PostAsJsonAsync("api/carriers" , carrier);
                    Console.WriteLine($"Response status: {response.StatusCode}");

                    if (response.IsSuccessStatusCode)
                    {
                        await JSRuntime.InvokeVoidAsync("alert" , "تم إنشاء الشركة بنجاح");
                        Navigation.NavigateTo("/admin/carrier/index");
                    }
                    else
                    {
                        var errorMessage = await response.Content.ReadAsStringAsync();
                        Console.WriteLine($"Error: {errorMessage}");
                        await JSRuntime.InvokeVoidAsync("alert" , $"خطأ في إنشاء الشركة: {errorMessage}");
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Exception: {ex.Message}");
                    await JSRuntime.InvokeVoidAsync("alert" , $"خطأ: {ex.Message}");
                }
                finally
                {
                    isSubmitting = false;
                    StateHasChanged();
                }
            }

            [JSInvokable]
            public static async Task HandleValidSubmitStatic( )
            {
                // This will be called from JavaScript
                // For now, just show an alert
                await Task.Delay(100); // Small delay to ensure JS interop is ready
            }

            private async Task TestButton( )
            {
                await JSRuntime.InvokeVoidAsync("alert" , "الزر يعمل!");
                Console.WriteLine("TestButton called");
            }
        }
    </div>
</div>